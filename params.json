{
  "name": "Material-framework",
  "tagline": "",
  "body": "# Material Framework\r\n\r\n## Highlights\r\nThe Material Framework is a combination of individual files, namely:\r\n- card.css\r\n- button.css\r\n- form.css\r\n- table.css\r\n- tab.css\r\n- fonts.css\r\n\r\nthey can be added either individually, or as a whole using the `material.min.css` file based on the need of the application.\r\n\r\n##### Project Structure (optional)\r\n````\r\n.\r\n├── css\r\n├── js\r\n├── img\r\n└── fonts\r\n html files\r\n````\r\n save the fonts folder from this repo _(from src or dist directory)_ in your project following this structure to use an offline version of the Roboto font with this framework.\r\n\r\n## card.css\r\n> For Cards and Navbar\r\n##### Basic Syntax\r\n````\r\n<div class=\"card\">\r\n  Enter card contents here...\r\n</div>\r\n````\r\n### Options\r\nWith additional classes added to the Basic syntax we can control the various depth level and hover effect of the card styling.\r\n\r\n1. Hover\r\n2. Z-depth\r\n - z-0 to z-6\r\n3. Size and Column\r\n - small (width : 300px)\r\n - regular (width : 500px) _(default)_\r\n - large (width : 700px)\r\n\r\nExample:\r\n````\r\n<div class=\"card large hover z-1\">\r\n  Enter Card contents here...\r\n</div>\r\n````\r\n##### Points to Note\r\n- The card width can be manually set with the following syntax.\r\n\r\n````\r\n.card{\r\n  max-width: //Set width here;\r\n}\r\n````\r\n\r\n- The Card will follow the full device width when `device-width < card-width`.\r\n- the `<h1>` tag is by default Center aligned with 0 top margin. Use it for card titles. Use other heading tags for subheadings for the card.\r\n- A background image can be set by placing a file named `bg.jpg` in img folder of the root directory\r\n\r\n#### Basic Syntax (Navbar)\r\n````\r\n<nav class=\"nav\">\r\n  <h1>Brand Name</h1>\r\n  <ul> <!-- Optional Links -->\r\n    <li><a href=\"#\">Link 1</a></li>\r\n    <li><a href=\"#\">Link 2</a></li>\r\n    <li><a href=\"#\">Link 3</a></li>\r\n  </ul>\r\n</nav>\r\n````\r\n\r\n### Options\r\n1. Z - Depth\r\n - z-0 to z-6\r\n2. Black and White theme (Default: white)\r\n - black\r\n3. Do not hide links in small screens\r\n - showSmall\r\n\r\n Example:\r\n````\r\n<nav class=\"nav black showSmall z-2\">....</nav>\r\n````\r\n\r\n##### Points to Note\r\n- By default the Navbar links will be hidden in small screens. The arrow to reveal them isn't functional yet. Use the showSmall class\r\nto display it instead.\r\n\r\n## button.css\r\n>for Buttons and chips\r\n\r\n##### Basic Syntax (Button)\r\n````\r\n<button class=\"button\">Button</button>\r\n````    \r\nor\r\n````\r\n<input type=\"button\" class=\"button\" value=\"Button\"/>\r\n````\r\nor\r\n````\r\n<a class=\"button\" ref=\"\">Button</a>\r\n````\r\n\r\nUse the standard HTML syntax for buttons, but add a class of \"button\" to implement the style. For adding other options, just add the other classes to the same class attribute.\r\n\r\n### Options\r\n\r\n1. Effects\r\n - hover\r\n - raised\r\n2. colors\r\n - grey\r\n - blue\r\n - red\r\n - green\r\n - blueGrey\r\n3. narrow\r\n\r\nExample:\r\n````\r\n<input type=\"button\" class=\"button hover blue narrow\" value=\"button\"/>\r\n````\r\n##### Points to Note\r\n- The button can be manually set with the following syntax. Remember to add the custom color class to the button element.\r\n\r\n````\r\n.button.customColor{\r\n  color: //Set text color here;\r\n  background-color: //Set button color here;\r\n}\r\n````\r\n\r\n##### Basic Syntax (Chip)\r\n````\r\n<a class=\"chip\" href=\"\">Chip</a>\r\n````\r\n\r\nUseful for styling hyperlinks as chips\r\n\r\n### Colors\r\n - blue\r\n - red\r\n - green\r\n - blueGrey\r\n\r\n## form.css\r\n### Usage\r\nThe usage of the form CSS styles has been kept very simple in-order to aide their ease of use. The form elements can be used normally without any class declarations, except in the form tag itself.\r\n\r\n### Syntax\r\n````\r\n<form class=\"form\">\r\n   <!-- Enter form code here -->\r\n</form>\r\n````\r\n\r\n#### __Important__\r\n1. For text inputs, the label element __MUST BE PRESENT__ and kept as the __very next tag__ following the input text tag, and the input text element __MUST BE DECLARED required__\r\n\r\n````\r\n<input type=\"text\" required/>\r\n<label>Label for above input</label>\r\n````\r\n\r\n2. Change color of button by giving it an id or class and setting its `background-color` & `color` attributes.\r\n3. add class full to the form to set text box, text area, select options to full form width.\r\n4. The form by default has no margins. Set a margin attribute to the form class if necessary.\r\n5. The `* for Required` can be added to the form by putting a class of required to the label as shown below\r\n\r\n````\r\n<label class=\"required\">Name</label>\r\n````\r\n\r\n#### Elements supported\r\n- [x] Text input with Label\r\n - text\r\n - number\r\n - email\r\n - password\r\n - color\r\n - date\r\n - tel\r\n - time\r\n - url\r\n- [x] Select options\r\n- [x] Default and Submit buttons\r\n- [x] Disabled button\r\n- [x] Text area\r\n- [x] Radio\r\n- [x] Check Box\r\n\r\n#### Known issues\r\n- Invalid values for text inputs with labels will result in the label returning to its default state when focus is lost.\r\n\r\n## table.css\r\n### Basic Syntax\r\n````\r\n<table class=\"table\">\r\n  //Table contents\r\n</table>\r\n````\r\n\r\n### Options\r\n- full _(width : 100%)_\r\n- alternate _(alternate color rows)_\r\n- center _(center align table cells)_\r\n\r\nExample:\r\n````\r\n<table class=\"table full alternate center\">\r\n  //Table contents\r\n</table>\r\n````\r\n\r\n## tab.css\r\n### Basic Syntax\r\n````\r\n<ul class=\"tab\">\r\n  <li><a>First tab</a></li>\r\n  <li><a>Second tab</a></li>\r\n</ul>\r\n````\r\n\r\n### Important\r\n1. The tab links must be nested inside an anchor tag in the list items.\r\n2. Only works for unordered list.\r\n\r\n### Options\r\n- light _(the default is dark theme)_\r\n\r\nExample:\r\n````\r\n<ul class=\"tab light\">\r\n  <li><a>First tab</a></li>\r\n  <li><a>Second tab</a></li>\r\n</ul>\r\n````\r\n\r\n## Download\r\n[material.css](https://github.com/ashwin-pc/material-framework/raw/master/dist/css/material.min.css)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}